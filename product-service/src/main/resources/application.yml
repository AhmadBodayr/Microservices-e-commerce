eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

server:
  port: 8070

spring:
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: inventory
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.stringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.stringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonDeserializer


  application:
    name: product-service
  config:
    import: optional:configserver:http://localhost:8888
  datasource:
    url: jdbc:postgresql://localhost:5432/product
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format-sql: true
    database: postgresql



#  data:
#    cassandra:
#      keyspace-name: default_keyspace
#      username: zeXjfZdOzzEjbARoFcdhRsGu
#      password: CBoIGnJAHb1Y,7h7I4Kn+xmtpw3qFBLbL0rRdJS_ItyqZId,d,_4Ur7mxoURJdKLIYO84_45+C_x.LEtuUAeh-AFG+g6kTkuuTkMQU.He17j8UD6k-8juUqThWWeTLfq
#      schema-action: create-if-not-exists
#      request:
#        timeout: 10s
#      connection:
#        connect-timeout: 10s
#        init-query-timeout: 10s
#
#datastax.astra:
#  secure-connect-bundle: secure-connect.zip
#
#astra.db:
#  id: 50a18904-cb42-48b5-9a86-127bda7d6788
#  region: us-east1
#  keyspace: default_keyspace
#  application.token: AstraCS:zeXjfZdOzzEjbARoFcdhRsGu:1f4a3a6bba99623b9d9eae9b6b8c17fc40e35c831dc25b7b544cfa8515f1af4a

